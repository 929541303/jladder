0.创建CA
	(a) 创建PrivateKey
		openssl genrsa -aes256 -out private/rootca.key.pem 4096
		会要求输入密码（这个密码是因为-aes256才要求输入的吗？）
	(b) 创建CA的CSR 
		openssl req -new -config rootca.cnf -sha256 -key private/rootca.key.pem -out csr/rootca.csr.pem
		这里通过配置文件简化了配置参数，证书请求明细在配置文件中，主要元素是「domain」字段，其他就是「国家」、「省」、「市」等字段。
		创建完的pem文件以BASE64编码方式保存，
	(c) 创建CA的根证书，并给自己签名
		openssl ca -selfsign -config rootca.cnf -in csr/rootca.csr.pem -extensions v3_ca -days 7300 -out certs/rootca.cert.pem
		把请求通过自签名的方式颁发成证书：颁发的文件可以直接用less打开查看，可以看到里面包含2大块内容：证书明文部分和证书Base64编码内容。
		注：这个不包含私钥的证书，就是给客户端颁发受信的CA
	(d) 将「证书」和「私钥」打包
		cat private/rootca.key.pem certs/rootca.cert.pem > server_cert.pem
		合并后的最终结果可以参考../file/ca.pem.readme
	(e) 转成p12文件给Java使用
		openssl pkcs12 -export -in server_cert.pem -out server_cert.p12 -caname nickli
		最终这部分包含完整的证书信息+私钥的文件，就会作为权威机构的文件
		
1.Server创建证书请求
   	(a) 创建PrivateKey
       	openssl genrsa -out server.key 1024    
       	疑问：这个私钥能用别的加密算法生成吗（我创建CA私钥时用的是AES）
   	(b) 根据上一步骤创建的私钥，创建CSR(证书签名请求 Certificate Signing Request)
       	openssl req -new -key server.key -out server.csr -subj /CN=*.baidu.com
       	解释：创建证书请求，这里只是配置了一下域名
       	CSR文件用「ReadCsr.java」解析；CSR文件主要包含「域名」以及「组织」等信息，除了域名有业务用途之外，其他字段基本只做展示用。
   	(c) 由CA颁发证书并签名
   	   	openssl x509 -req -days 3650 -in server.csr -CA ca.pem -CAkey ca.pem -CAcreateserial -out server.crt    
   	   	注意ca.pem中一定要包含privateKey，因为这步是需要由CA给CSR签名颁发证书链。
   	   
2.Client导入CA

3.Server配置CA

4.Client与Server连接并通信