RSA算法介绍
	1.由3个人名首字母命名而成的算法，也是当今最流行的公开密钥算法（非对称性加密算法）
	2.因为属于非对称加密，需要维护公钥和私钥
	3.安全性上，一般认为512位是不安全的；768位能抵抗一般性攻击；1024位基本是安全的（一个1024位的2进制转成10进制大概是300位左右）；2048位的密钥极其安全(1024是指2个素数乘积二进制的位数，例如素数61和53的乘积是3233，转成2进制是110010100001，即这个秘钥是12位)
	4.算法原理：根据数论，寻找2个较大的素数容易，但分解两出个大素数乘积困难，因此将乘积作为公钥
	5.算法用途：既可以用作加密，也可以用作数字签名

RSA生成算法：
   	1.首先选择随即2个不相等的素数p和q：61和53（实际应用中，这两个质数越大，就越难破解）
   	2.计算p和q乘积，61*53=3233 (110010100001) 生成了12位的秘钥
   	3.计算n的欧拉函数(找到正整数中小于或等于n与n互质的数量，例如φ(8)=4，这4个数字是1、3、5、7均和8互斥)
      φ(n)=(p-1)(q-1)        // p是大于1的整数，则p和p-1构成互质关系
      φ(3233)= 60 × 52，即 3120
   	4.随即选择一个数字e，作为公钥中用来加密的数字，条件是 1 < e < φ(n)，且e与φ(n) 互质
      本例在1-3120之间选择了数字17（实际应用中，常常选择65537）
   	5.计算模反元素d，也就是秘钥中被用来解密的那个数字（所谓"模反元素"就是指有一个整数d，可以使得ed被φ(n)除的余数为1）
      ed ≡ 1 (mod φ(n)) 本例使用2753，即 (17 * 2753) mode 3120 = 1
      关于「模反元素」：例如3和11互质，那么4就是3的模反元素，因为3*4-1=11
      上面例子文字含义即：e和d的乘积减1能被「欧拉n」整除
   	6.将n和e封装成公钥，n和d封装成私钥。
      n=3233，e=17，d=2753，所以公钥就是 (3233,17)，私钥就是（3233, 2753）。

RSA算法安全性原理：
   	RSA算法的安全性原理主要在于两个大素数乘积不可分解的数学原理，以「e * d + s * φ(n) = 1」为例，我们知道n和e是公钥，对外公开的，
   	因此我们想要推算出d值，必须要求得φ(n)

疑问：假如使用一个32位的密钥，如何进行破解？
 
 
 
参考资料
《RSA算法》http://www.ruanyifeng.com/blog/2013/07/rsa_algorithm_part_two.html
《RSA加密算法中的数学原理》https://zhuanlan.zhihu.com/p/21947331
《RSA加解密实践》https://www.cnblogs.com/coolYuan/p/9168284.html