RSA
1.由3个人名首字母命名而成的算法
2.属于非对称加密，需要维护公钥和私钥
3.安全性上，一般认为512位是不安全的；768位能抵抗一般性攻击；1024位基本是安全的(1024是指2个素数乘积二进制的位数，例如素数61和53的乘积是3233，转成2进制是110010100001，即这个秘钥是12位)
4.算法原理：根据数论，寻找2个较大的素数容易，但分解两出个大素数乘积困难，因此将乘积作为公钥

RSA生成算法：
   1.首先选择随即2个不相等的素数p和q：61和53（实际应用中，这两个质数越大，就越难破解）
   2.计算p和q乘积，61*53=3233 (110010100001) 生成了12位的秘钥
   3.计算n的欧拉函数(找到正整数中小于或等于n与n互斥的数量，例如φ(8)=4，这4个数字是1、3、5、7均和8互斥)
      φ(n)=(p-1)(q-1)
      φ(3233)= 60 × 52，即 3120
   4.随即选择一个数字e，作为公钥中用来加密的数字，条件是 1 < e < φ(n)，且e与φ(n) 互质
      本例在1-3120之间选择了数字17（实际应用中，常常选择65537）
   5.计算模反元素d，也就是秘钥中被用来解密的那个数字（所谓"模反元素"就是指有一个整数d，可以使得ed被φ(n)除的余数为1）
      ed ≡ 1 (mod φ(n)) 本例使用2753，即 (17 * 2753) mode 3120 = 1
   6.将n和e封装成公钥，n和d封装成私钥。
      n=3233，e=17，d=2753，所以公钥就是 (3233,17)，私钥就是（3233, 2753）。
   